// <auto-generated />
using System;
using ArticleWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArticleWebApi.Migrations
{
    [DbContext(typeof(ArticleContext))]
    [Migration("20241023075042_NewlyUpdatedOne_Migration")]
    partial class NewlyUpdatedOne_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleWebApi.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ArticleId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            Content = "An amazing journey through the mountains.",
                            CreatedDate = new DateTime(2024, 10, 23, 7, 50, 39, 321, DateTimeKind.Utc).AddTicks(8957),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "The Great Adventure"
                        },
                        new
                        {
                            ArticleId = 2,
                            Content = "Exploring the best dishes from around the world.",
                            CreatedDate = new DateTime(2024, 10, 23, 7, 50, 39, 321, DateTimeKind.Utc).AddTicks(8964),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Culinary Delights"
                        });
                });

            modelBuilder.Entity("ArticleWebApi.Models.ArticleGroup", b =>
                {
                    b.Property<int>("ArticleGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleGroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ArticleGroupId");

                    b.ToTable("ArticleGroups");

                    b.HasData(
                        new
                        {
                            ArticleGroupId = 1,
                            GroupName = "Travel"
                        },
                        new
                        {
                            ArticleGroupId = 2,
                            GroupName = "Food"
                        });
                });

            modelBuilder.Entity("ArticleWebApi.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Los Angeles",
                            StateId = 1
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Toronto",
                            StateId = 2
                        });
                });

            modelBuilder.Entity("ArticleWebApi.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "USA"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "Canada"
                        });
                });

            modelBuilder.Entity("ArticleWebApi.Models.Mappings.Article_ArticleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleGroupId");

                    b.HasIndex("ArticleId");

                    b.ToTable("Article_ArticleGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleGroupId = 1,
                            ArticleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArticleGroupId = 2,
                            ArticleId = 2
                        });
                });

            modelBuilder.Entity("ArticleWebApi.Models.Mappings.Article_City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("CityId");

                    b.ToTable("Article_Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            CityId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 2,
                            CityId = 2
                        });
                });

            modelBuilder.Entity("ArticleWebApi.Models.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<int>("ArticleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PackageId");

                    b.HasIndex("ArticleGroupId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            PackageId = 1,
                            ArticleGroupId = 1,
                            PackageName = "Adventure Package",
                            Price = 499.99m
                        },
                        new
                        {
                            PackageId = 2,
                            ArticleGroupId = 2,
                            PackageName = "Gourmet Package",
                            Price = 299.99m
                        });
                });

            modelBuilder.Entity("ArticleWebApi.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            CountryId = 1,
                            StateName = "California"
                        },
                        new
                        {
                            StateId = 2,
                            CountryId = 2,
                            StateName = "Ontario"
                        });
                });

            modelBuilder.Entity("ArticleWebApi.Models.City", b =>
                {
                    b.HasOne("ArticleWebApi.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("ArticleWebApi.Models.Mappings.Article_ArticleGroup", b =>
                {
                    b.HasOne("ArticleWebApi.Models.ArticleGroup", "ArticleGroup")
                        .WithMany("Article_ArticleGroups")
                        .HasForeignKey("ArticleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArticleWebApi.Models.Article", "Article")
                        .WithMany("Article_ArticleGroups")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("ArticleGroup");
                });

            modelBuilder.Entity("ArticleWebApi.Models.Mappings.Article_City", b =>
                {
                    b.HasOne("ArticleWebApi.Models.Article", "Article")
                        .WithMany("Article_Cities")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArticleWebApi.Models.City", "City")
                        .WithMany("Article_Cities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("City");
                });

            modelBuilder.Entity("ArticleWebApi.Models.Package", b =>
                {
                    b.HasOne("ArticleWebApi.Models.ArticleGroup", "ArticleGroup")
                        .WithMany("Packages")
                        .HasForeignKey("ArticleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleGroup");
                });

            modelBuilder.Entity("ArticleWebApi.Models.State", b =>
                {
                    b.HasOne("ArticleWebApi.Models.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ArticleWebApi.Models.Article", b =>
                {
                    b.Navigation("Article_ArticleGroups");

                    b.Navigation("Article_Cities");
                });

            modelBuilder.Entity("ArticleWebApi.Models.ArticleGroup", b =>
                {
                    b.Navigation("Article_ArticleGroups");

                    b.Navigation("Packages");
                });

            modelBuilder.Entity("ArticleWebApi.Models.City", b =>
                {
                    b.Navigation("Article_Cities");
                });

            modelBuilder.Entity("ArticleWebApi.Models.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("ArticleWebApi.Models.State", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
